name: Rect
type: datatypes
summary: |
  The Rect datatype in Unity represents a rectangle defined by its position x, y, and size width, height. It's commonly used in 2D game development to manage areas, positions, and sizes within a game scene.

description:
code_samples:
inherits:
constructors:
  - name: new
    summary: |
      Represents a new instance of Rect with specified x, y position, and width, height size.
    is_static: true
    code_samples:
    parameters:
      - name: x
        type: number
        default:
        summary:
      - name: y
        type: number
        default:
        summary:
      - name: width
        type: number
        default:
        summary:
      - name: height
        type: number
        default:
        summary:
    returns:
      - type: DataType.Rect
        summary:
properties:
  - name: x
    summary: |
      Retrieve or assign the x-coordinate of the Rect.
    is_static: false
    code_samples:
    type: number
  - name: y
    summary: |
      Access or modify the y-coordinate of the Rect.
    is_static: false
    code_samples:
    type: number
  - name: position
    summary: |
      Get or set the position of the Rect as a Vector2.
    is_static: false
    code_samples:
    type: DataType.Vector2
  - name: center
    summary: |
      Obtain or modify the center position of the Rect.
    is_static: false
    code_samples:
    type: DataType.Vector2
  - name: min
    summary: |
      Access the min point of the Rect.
    is_static: false
    code_samples:
    type: DataType.Vector2
  - name: max
    summary: |
      Get the max point of the Rect.
    is_static: false
    code_samples:
    type: DataType.Vector2
  - name: width
    summary: |
      Access or modify the width of the Rect.
    is_static: false
    code_samples:
    type: number
  - name: height
    summary: |
      Retrieve or set the height of the Rect.
    is_static: false
    code_samples:
    type: number
  - name: size
    summary: |
      Get or set the size of the Rect as a Vector2.
    is_static: false
    code_samples:
    type: DataType.Vector2
  - name: xMin
    summary: |
      Access the minimum x-coordinate of the Rect.
    is_static: false
    code_samples:
    type: number
  - name: yMin
    summary: |
      Access the minimum y-coordinate of the Rect.
    is_static: false
    code_samples:
    type: number
  - name: xMax
    summary: |
      Get the maximum x-coordinate of the Rect.
    is_static: false
    code_samples:
    type: number
  - name: yMax
    summary: |
      Access the maximum y-coordinate of the Rect.
    is_static: false
    code_samples:
    type: number
  - name: zero
    summary: |
      Obtain a Rect instance positioned at the origin (0, 0) with zero width and height. This represents a point at the origin.
    is_static: true
    code_samples:
    type: DataType.Rect
methods:
  - name: Set
    summary: |
      Set the position and size of the Rect.
    is_static: false
    code_samples:
    parameters:
      - name: x
        type: number
        default:
        summary:
      - name: y
        type: number
        default:
        summary:
      - name: width
        type: number
        default:
        summary:
      - name: height
        type: number
        default:
        summary:
    returns:
      - type: void
        summary:
  - name: Contains
    summary: |
      Check if a point is within the Rect.
    is_static: false
    code_samples:
    parameters:
      - name: point
        type: DataType.Vector2
        default:
        summary:
    returns:
      - type: boolean
        summary:
  - name: Overlaps
    summary: |
      Determine if the Rect overlaps with another Rect.
    is_static: false
    code_samples:
    parameters:
      - name: other
        type: DataType.Rect
        default:
        summary:
    returns:
      - type: boolean
        summary:
  - name: MinMaxRect
    summary: |
      Create a new Rect from minimum and maximum coordinates.
    is_static: true
    code_samples:
    parameters:
      - name: xmin
        type: number
        default:
        summary:
      - name: ymin
        type: number
        default:
        summary:
      - name: xmax
        type: number
        default:
        summary:
      - name: ymax
        type: number
        default:
        summary:
    returns:
      - type: DataType.Rect
        summary:
  - name: NormalizedToPoint
    summary: |
      Convert normalized coordinates to a point within the Rect.
    is_static: true
    code_samples:
    parameters:
      - name: rectangle
        type: DataType.Rect
        default:
        summary:
      - name: normalizedRectCoordinates
        type: DataType.Vector2
        default:
        summary:
    returns:
      - type: DataType.Vector2
        summary:
  - name: PointToNormalized
    summary: |
      Convert a point within the Rect to normalized coordinates.
    is_static: true
    code_samples:
    parameters:
      - name: rectangle
        type: DataType.Rect
        default:
        summary:
      - name: point
        type: DataType.Vector2
        default:
        summary:
    returns:
      - type: DataType.Vector2
        summary:
math_operations:
  - operation: "=="
    summary: |
      Compare two Rect instances for equality.
    type_a: Rect
    type_b: Rect
    return_type: boolean
    code_samples:
